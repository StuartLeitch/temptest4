{
  "version": 1,
  "projects": {
    "env-utils": {
      "root": "libs/env-utils",
      "sourceRoot": "libs/env-utils/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/env-utils/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/env-utils"],
          "options": {
            "jestConfig": "libs/env-utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "eve": {
      "root": "libs/eve",
      "sourceRoot": "libs/eve/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/eve/tsconfig.lib.json",
              "libs/eve/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/eve/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/eve/jest.config.js",
            "tsConfig": "libs/eve/tsconfig.spec.json"
          }
        },
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "main": "libs/eve/src/index.ts",
            "tsConfig": "libs/eve/tsconfig.lib.json",
            "outputPath": "dist/libs/eve",
            "assets": []
          }
        },
        "package": {
          "builder": "@nrwl/node:package",
          "options": {
            "main": "libs/eve/src/index.ts",
            "tsConfig": "libs/eve/tsconfig.lib.json",
            "outputPath": "dist/libs/eve",
            "packageJson": "libs/eve/package.json",
            "assets": ["libs/eve/README.md"]
          }
        }
      }
    },
    "import-manuscript-backend": {
      "root": "apps/import-manuscript-backend",
      "sourceRoot": "apps/import-manuscript-backend/src",
      "projectType": "application",
      "prefix": "import-manuscript-backend",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/import-manuscript-backend",
            "main": "apps/import-manuscript-backend/src/main.ts",
            "tsConfig": "apps/import-manuscript-backend/tsconfig.app.json",
            "assets": [
              "apps/import-manuscript-backend/src/assets",
              "apps/import-manuscript-backend/src/Dockerfile"
            ],
            "webpackConfig": "apps/import-manuscript-backend/webpack.config.js"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "import-manuscript-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/import-manuscript-backend/.eslintrc",
            "tsConfig": [
              "apps/import-manuscript-backend/tsconfig.app.json",
              "apps/import-manuscript-backend/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/import-manuscript-backend/**"
            ],
            "lintFilePatterns": ["apps/import-manuscript-backend/**/*.ts"]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/import-manuscript-backend/tsconfig.spec.json",
            "features": "apps/import-manuscript-backend/tests/**/*.feature",
            "steps": "apps/import-manuscript-backend/tests/**/*.steps.ts",
            "path": "apps/import-manuscript-backend",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/import-manuscript-backend/jest.config.js",
            "tsConfig": "apps/import-manuscript-backend/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "import-manuscript-validation": {
      "root": "apps/import-manuscript-validation",
      "sourceRoot": "apps/import-manuscript-validation/src",
      "projectType": "application",
      "prefix": "import-manuscript-validation",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/import-manuscript-validation",
            "main": "apps/import-manuscript-validation/src/main.ts",
            "tsConfig": "apps/import-manuscript-validation/tsconfig.app.json",
            "assets": [
              "apps/import-manuscript-validation/src/assets",
              "apps/import-manuscript-validation/src/Dockerfile"
            ]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "import-manuscript-validation:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/import-manuscript-validation/.eslintrc",
            "tsConfig": [
              "apps/import-manuscript-validation/tsconfig.app.json",
              "apps/import-manuscript-validation/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/import-manuscript-validation/**"
            ],
            "lintFilePatterns": ["apps/import-manuscript-validation/**/*.ts"]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/import-manuscript-validation/tsconfig.spec.json",
            "features": "apps/import-manuscript-validation/tests/**/*.feature",
            "steps": "apps/import-manuscript-validation/tests/**/*.steps.ts",
            "path": "apps/import-manuscript-validation",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/import-manuscript-validation/jest.config.js",
            "tsConfig": "apps/import-manuscript-validation/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "import-manuscript-web": {
      "root": "apps/import-manuscript-web",
      "sourceRoot": "apps/import-manuscript-web/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "outputPath": "dist/apps/import-manuscript-web",
            "index": "apps/import-manuscript-web/src/index.html",
            "main": "apps/import-manuscript-web/src/main.tsx",
            "polyfills": "apps/import-manuscript-web/src/polyfills.ts",
            "tsConfig": "apps/import-manuscript-web/tsconfig.app.json",
            "assets": [
              "apps/import-manuscript-web/src/favicon.ico",
              "apps/import-manuscript-web/src/assets",
              "apps/import-manuscript-web/src/silent-check-sso.html",
              "apps/import-manuscript-web/src/env-template.js",
              "apps/import-manuscript-web/src/Dockerfile",
              "apps/import-manuscript-web/src/nginx.conf"
            ],
            "styles": ["apps/import-manuscript-web/src/styles.less"],
            "scripts": [],
            "webpackConfig": "@nrwl/react/plugins/webpack"
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/import-manuscript-web/src/environments/environment.ts",
                  "with": "apps/import-manuscript-web/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "import-manuscript-web:build",
            "hmr": true
          },
          "configurations": {
            "production": {
              "buildTarget": "import-manuscript-web:build:production",
              "hmr": false
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/import-manuscript-web/**/*.{ts,tsx,js,jsx}"
            ]
          }
        }
      }
    },
    "import-manuscript-web-e2e": {
      "root": "apps/import-manuscript-web-e2e",
      "sourceRoot": "apps/import-manuscript-web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/import-manuscript-web-e2e/cypress.json",
            "devServerTarget": "import-manuscript-web:serve",
            "tsConfig": "apps/import-manuscript-web-e2e/tsconfig.json"
          },
          "configurations": {
            "production": {
              "devServerTarget": "import-manuscript-web:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/import-manuscript-web-e2e/**/*.{js,ts}"]
          }
        }
      }
    },
    "invoicing-admin": {
      "root": "apps/invoicing-admin",
      "sourceRoot": "apps/invoicing-admin/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "webpackConfig": "apps/invoicing-admin/webpack.config.js",
            "outputPath": "dist/apps/invoicing-admin",
            "index": "apps/invoicing-admin/src/index.html",
            "main": "apps/invoicing-admin/src/main.tsx",
            "polyfills": "apps/invoicing-admin/src/polyfills.ts",
            "tsConfig": "apps/invoicing-admin/tsconfig.app.json",
            "assets": [
              "apps/invoicing-admin/src/favicon.ico",
              "apps/invoicing-admin/src/assets",
              "apps/invoicing-admin/src/silent-check-sso.html",
              "apps/invoicing-admin/src/env-template.js",
              "apps/invoicing-admin/src/Dockerfile",
              "apps/invoicing-admin/src/nginx.conf"
            ],
            "styles": ["apps/invoicing-admin/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/invoicing-admin/src/environments/environment.ts",
                  "with": "apps/invoicing-admin/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "3mb",
                  "maximumError": "10mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "invoicing-admin:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "invoicing-admin:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-admin/.eslintrc",
            "tsConfig": [
              "apps/invoicing-admin/tsconfig.app.json",
              "apps/invoicing-admin/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/invoicing-admin/**"]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/invoicing-admin/tsconfig.spec.json",
            "features": "apps/invoicing-admin/tests/**/*.feature",
            "steps": "apps/invoicing-admin/tests/**/*.steps.ts",
            "path": "apps/invoicing-admin",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/invoicing-admin/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "invoicing-admin-e2e": {
      "root": "apps/invoicing-admin-e2e",
      "sourceRoot": "apps/invoicing-admin-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/invoicing-admin-e2e/cypress.json",
            "tsConfig": "apps/invoicing-admin-e2e/tsconfig.e2e.json",
            "devServerTarget": "invoicing-admin:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "invoicing-admin:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-admin-e2e/.eslintrc",
            "tsConfig": ["apps/invoicing-admin-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/invoicing-admin-e2e/**"]
          }
        }
      }
    },
    "invoicing-erp-invoice-registration": {
      "root": "apps/invoicing-erp-invoice-registration",
      "sourceRoot": "apps/invoicing-erp-invoice-registration/src",
      "projectType": "application",
      "prefix": "invoicing-erp-invoice-registration",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/invoicing-erp-invoice-registration",
            "main": "apps/invoicing-erp-invoice-registration/src/main.ts",
            "tsConfig": "apps/invoicing-erp-invoice-registration/tsconfig.app.json",
            "assets": ["apps/invoicing-erp-invoice-registration/src/Dockerfile"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "invoicing-erp-invoice-registration:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/invoicing-erp-invoice-registration/**/*.ts"
            ],
            "linter": "eslint",
            "config": "apps/invoicing-erp-invoice-registration/.eslintrc",
            "tsConfig": [
              "apps/invoicing-erp-invoice-registration/tsconfig.app.json",
              "apps/invoicing-erp-invoice-registration/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/invoicing-erp-invoice-registration/**"
            ]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/invoicing-erp-invoice-registration/tsconfig.spec.json",
            "features": "apps/invoicing-erp-invoice-registration/tests/**/*.feature",
            "steps": "apps/invoicing-erp-invoice-registration/tests/**/*.steps.ts",
            "path": "apps/invoicing-erp-invoice-registration",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/invoicing-erp-invoice-registration/jest.config.js",
            "tsConfig": "apps/invoicing-erp-invoice-registration/tsconfig.spec.json"
          }
        }
      }
    },
    "invoicing-graphql": {
      "root": "apps/invoicing-graphql",
      "sourceRoot": "apps/invoicing-graphql/src",
      "projectType": "application",
      "prefix": "invoicing-graphql",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/invoicing-graphql",
            "main": "apps/invoicing-graphql/src/main.ts",
            "tsConfig": "apps/invoicing-graphql/tsconfig.app.json",
            "assets": [
              "apps/invoicing-graphql/src/cron_flags.yaml",
              "apps/invoicing-graphql/src/Dockerfile",
              {
                "glob": "**/*",
                "input": "libs/shared/src/lib/domain/services/PdfGenerator/templates",
                "output": "templates"
              },
              {
                "glob": "**/*.xml",
                "input": "libs/shared/src/lib/domain/services/exrates",
                "output": "exrates"
              }
            ],
            "webpackConfig": "apps/invoicing-graphql/webpack.config.js"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "invoicing-graphql:build",
            "port": 57050
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-graphql/.eslintrc",
            "tsConfig": [
              "apps/invoicing-graphql/tsconfig.app.json",
              "apps/invoicing-graphql/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/invoicing-graphql/**"]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/invoicing-graphql/tsconfig.spec.json",
            "features": "apps/invoicing-graphql/tests/**/*.feature",
            "steps": "apps/invoicing-graphql/tests/**/*.steps.ts",
            "path": "apps/invoicing-graphql",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/invoicing-graphql/jest.config.js",
            "tsConfig": "apps/invoicing-graphql/tsconfig.spec.json"
          }
        }
      }
    },
    "invoicing-infrastructure": {
      "root": "apps/invoicing-infrastructure",
      "sourceRoot": "apps/invoicing-infrastructure/src",
      "projectType": "application",
      "prefix": "invoicing-infrastructure",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/invoicing-infrastructure",
            "main": "apps/invoicing-infrastructure/src/main.ts",
            "tsConfig": "apps/invoicing-infrastructure/tsconfig.app.json",
            "assets": []
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "invoicing-infrastructure:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-infrastructure/.eslintrc",
            "tsConfig": [
              "apps/invoicing-infrastructure/tsconfig.app.json",
              "apps/invoicing-infrastructure/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/invoicing-infrastructure/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/invoicing-infrastructure/jest.config.js",
            "tsConfig": "apps/invoicing-infrastructure/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "invoicing-web": {
      "root": "apps/invoicing-web",
      "sourceRoot": "apps/invoicing-web/src",
      "projectType": "application",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/web:build",
          "options": {
            "webpackConfig": "apps/invoicing-web/webpack.config.js",
            "outputPath": "dist/apps/invoicing-web",
            "index": "apps/invoicing-web/src/index.html",
            "main": "apps/invoicing-web/src/main.tsx",
            "polyfills": "apps/invoicing-web/src/polyfills.ts",
            "tsConfig": "apps/invoicing-web/tsconfig.app.json",
            "assets": [
              "apps/invoicing-web/src/silent-check-sso.html",
              "apps/invoicing-web/src/favicon.ico",
              "apps/invoicing-web/src/assets",
              "apps/invoicing-web/src/env-template.js",
              "apps/invoicing-web/src/Dockerfile",
              "apps/invoicing-web/src/nginx.conf"
            ],
            "styles": ["apps/invoicing-web/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/web:dev-server",
          "options": {
            "buildTarget": "invoicing-web:build"
          },
          "configurations": {
            "production": {
              "buildTarget": "invoicing-web:build:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-web/.eslintrc",
            "tsConfig": [
              "apps/invoicing-web/tsconfig.app.json",
              "apps/invoicing-web/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/invoicing-web/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/invoicing-web/jest.config.js",
            "tsConfig": "apps/invoicing-web/tsconfig.spec.json"
          }
        }
      }
    },
    "invoicing-web-e2e": {
      "root": "apps/invoicing-web-e2e",
      "sourceRoot": "apps/invoicing-web-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/invoicing-web-e2e/cypress.json",
            "tsConfig": "apps/invoicing-web-e2e/tsconfig.e2e.json",
            "devServerTarget": "invoicing-web:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "invoicing-web:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/invoicing-web-e2e/.eslintrc",
            "tsConfig": ["apps/invoicing-web-e2e/tsconfig.e2e.json"],
            "exclude": ["**/node_modules/**", "!apps/invoicing-web-e2e/**"]
          }
        }
      }
    },
    "import-manuscript-commons": {
      "root": "libs/import-manuscript-commons",
      "sourceRoot": "libs/import-manuscript-commons/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/import-manuscript-commons/tsconfig.lib.json",
              "libs/import-manuscript-commons/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!libs/import-manuscript-commons/**/*"
            ]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "libs/import-manuscript-commons/tsconfig.spec.json",
            "features": "libs/import-manuscript-commons/tests/**/*.feature",
            "steps": "libs/import-manuscript-commons/tests/**/*.steps.ts",
            "path": "libs/import-manuscript-commons",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/import-manuscript-commons/jest.config.js",
            "tsConfig": "libs/import-manuscript-commons/tsconfig.spec.json",
            "passWithNoTests": true
          }
        }
      }
    },
    "queue-utils": {
      "root": "libs/queue-utils",
      "sourceRoot": "libs/queue-utils/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/queue-utils/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/queue-utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "react-components": {
      "root": "libs/react-components",
      "sourceRoot": "libs/react-components/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/react-components/.eslintrc",
            "tsConfig": [
              "libs/react-components/tsconfig.lib.json",
              "libs/react-components/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/react-components/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/react-components/jest.config.js",
            "tsConfig": "libs/react-components/tsconfig.spec.json"
          }
        }
      }
    },
    "reporting-backend": {
      "root": "apps/reporting-backend",
      "sourceRoot": "apps/reporting-backend/src",
      "projectType": "application",
      "prefix": "reporting-backend",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "webpackConfig": "apps/reporting-backend/webpack.config.js",
            "outputPath": "dist/apps/reporting-backend",
            "main": "apps/reporting-backend/src/main.ts",
            "tsConfig": "apps/reporting-backend/tsconfig.app.json",
            "assets": ["apps/reporting-backend/src/Dockerfile"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/reporting-backend/src/environments/environment.ts",
                  "with": "apps/reporting-backend/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "reporting-backend:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/reporting-backend/.eslintrc",
            "tsConfig": [
              "apps/reporting-backend/tsconfig.app.json",
              "apps/reporting-backend/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!apps/reporting-backend/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/reporting-backend/jest.config.js",
            "tsConfig": "apps/reporting-backend/tsconfig.spec.json"
          }
        }
      }
    },
    "reporting-pull-historic-events": {
      "root": "apps/reporting-pull-historic-events",
      "sourceRoot": "apps/reporting-pull-historic-events/src",
      "projectType": "application",
      "prefix": "reporting-pull-historic-events",
      "schematics": {},
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "options": {
            "outputPath": "dist/apps/reporting-pull-historic-events",
            "main": "apps/reporting-pull-historic-events/src/main.ts",
            "tsConfig": "apps/reporting-pull-historic-events/tsconfig.app.json",
            "assets": []
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/reporting-pull-historic-events/src/environments/environment.ts",
                  "with": "apps/reporting-pull-historic-events/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "reporting-pull-historic-events:build",
            "port": 0
          }
        },
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "apps/reporting-pull-historic-events/.eslintrc",
            "tsConfig": [
              "apps/reporting-pull-historic-events/tsconfig.app.json",
              "apps/reporting-pull-historic-events/tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**",
              "!apps/reporting-pull-historic-events/**"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "apps/reporting-pull-historic-events/jest.config.js",
            "tsConfig": "apps/reporting-pull-historic-events/tsconfig.spec.json"
          }
        }
      }
    },
    "shared": {
      "root": "libs/shared",
      "sourceRoot": "libs/shared/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:lint",
          "options": {
            "linter": "eslint",
            "config": "libs/shared/.eslintrc",
            "tsConfig": [
              "libs/shared/tsconfig.lib.json",
              "libs/shared/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/shared/**"]
          }
        },
        "test": {
          "builder": "./tools/builders:cucumber",
          "options": {
            "tsConfig": "apps/invoicing-graphql/tsconfig.spec.json",
            "features": "libs/shared/tests/lib/**/*.feature",
            "steps": "libs/shared/tests/lib/**/*.steps.ts",
            "path": "libs/shared",
            "format": "json",
            "coverage": true
          }
        },
        "jest": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/shared/jest.config.js",
            "tsConfig": "libs/shared/tsconfig.spec.json"
          }
        }
      }
    },
    "sisif": {
      "root": "libs/sisif",
      "sourceRoot": "libs/sisif/src",
      "projectType": "library",
      "schematics": {},
      "architect": {
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "libs/sisif/tsconfig.lib.json",
              "libs/sisif/tsconfig.spec.json"
            ],
            "exclude": ["**/node_modules/**", "!libs/sisif/**"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "options": {
            "jestConfig": "libs/sisif/jest.config.js",
            "tsConfig": "libs/sisif/tsconfig.spec.json"
          }
        }
      }
    }
  },
  "cli": {
    "defaultCollection": "@nrwl/node",
    "analytics": false
  },
  "schematics": {
    "@nrwl/workspace": {
      "library": {
        "linter": "eslint"
      }
    },
    "@nrwl/cypress": {
      "cypress-project": {
        "linter": "eslint"
      }
    },
    "@nrwl/react": {
      "application": {
        "style": "scss",
        "linter": "eslint",
        "babel": true
      },
      "component": {
        "style": "scss"
      },
      "library": {
        "style": "scss",
        "linter": "eslint"
      }
    },
    "@nrwl/next": {
      "application": {
        "style": "scss",
        "linter": "eslint"
      }
    },
    "@nrwl/web": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/node": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/nest": {
      "application": {
        "linter": "eslint"
      }
    },
    "@nrwl/express": {
      "application": {
        "linter": "eslint"
      }
    }
  },
  "defaultProject": "invoicing-graphql"
}
